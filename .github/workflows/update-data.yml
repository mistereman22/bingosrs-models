name: Update data and release

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * 4"

jobs:
  update-data:
    name: Update data
    permissions:
      contents: write
    runs-on: ubuntu-latest
    outputs:
      changes: ${{ steps.check_changes.outputs.changes }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org/
      - name: Install Dependencies
        run: npm ci
      - name: Update data from json dumps
        run: npm run update-enums
      - name: Check for changes
        id: check_changes
        run: |
          if [[ -n $(git status --porcelain) ]]; then
            echo "changes=true" >> "$GITHUB_OUTPUT"
          fi
      - name: Build
        if: ${{ steps.check_changes.outputs.changes == 'true' }}
        run: npm run build
      - name: Commit updates
        if: ${{ steps.check_changes.outputs.changes == 'true' }}
        run: |
          git config --global user.name 'Github Actions Workflow'
          git config --global user.email "10224219+mistereman22@users.noreply.github.com"
          git commit -am "Automated update of item and monster data"
      - name: Update version
        id: update_version
        if: ${{ steps.check_changes.outputs.changes == 'true' }}
        run: |
          version_tag=$(npm version patch)
          echo "version_tag=$version_tag" >> $GITHUB_ENV
      - name: Push new version
        if: ${{ steps.check_changes.outputs.changes == 'true' }}
        run: git push --follow-tags
      - name: Create Release
        if: ${{ steps.check_changes.outputs.changes == 'true' }}
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.version_tag }}
          release_name: Release ${{ env.version_tag }}
          body: Automatic release for updated item and monster definitions
          draft: false
          prerelease: false
  publish-npm:
    needs: [update-data]
    name: Publish release
    if: ${{ needs.update-data.outputs.changes == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org/
      - run: npm ci
      - run: npm run build
      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}